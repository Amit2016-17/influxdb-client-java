GROUP,PACKAGE,CLASS,INSTRUCTION_MISSED,INSTRUCTION_COVERED,BRANCH_MISSED,BRANCH_COVERED,LINE_MISSED,LINE_COVERED,COMPLEXITY_MISSED,COMPLEXITY_COVERED,METHOD_MISSED,METHOD_COVERED
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client,FluxClientKotlinFactory,3,0,0,0,1,0,1,0,1,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client,FluxClientKotlinFactory.Companion,0,31,0,0,0,7,0,2,0,2
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl,239,18,0,0,37,2,9,1,9,1
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.query.new Consumer() {...},6,0,0,0,1,0,1,0,1,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.query.consumer.new BiConsumer() {...},19,0,0,0,2,0,1,0,1,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.query.new Runnable() {...},8,0,0,0,1,0,1,0,1,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.query.consumer.new BiConsumer() {...},20,0,0,0,2,0,1,0,1,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.queryRaw.new Consumer() {...},6,0,0,0,1,0,1,0,1,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.queryRaw.new Runnable() {...},8,0,0,0,1,0,1,0,1,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.query.responseConsumer.new FluxCsvParser.FluxResponseConsumer() {...},36,0,2,0,6,0,4,0,3,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.query.consumer.1.new Function2() {...},47,0,9,0,3,0,6,0,1,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.queryRaw.consumer.1.new Function2() {...},48,0,9,0,3,0,6,0,1,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.query.consumer.2.new Function2() {...},55,0,9,0,3,0,6,0,1,0
The Kotlin InfluxDB 2.0 Client,org.influxdata.kotlin.client.internal,FluxApiKotlinImpl.queryRaw.consumer.new BiConsumer() {...},26,0,2,0,4,0,2,0,1,0
